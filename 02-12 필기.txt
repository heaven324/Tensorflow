■ 포트폴리오를 더 빛내기 위한 Tip 구현

	"분류가 잘 안되는 사진을 따로 골라내서 그 사진들은 사람이 분류하게 하고 분류가 잘되는 수많은 
	 사진들은 컴퓨터가 분류하겠금 코드를 구현 "


		의사	vs	vgg 신경망(인공지능)
	
			환자

	1. 의사 : 암, 신경망 : 암
	2. 의사 : 암이 아니다, 신경망 : 암

			암 (87%의 확률)

			암 (51%의 확률)

	★ 폐사진 (의료데이터)
	
	★ 이파리 (공장의 제품)
	
		보유기술 : 딥러닝 신경망 구축
	
			1. mnist   정확도 :    모델 :
			2. cifar10 정확도 :    모델 :
			3. 개/고양이 정확도:   모델 :
			4. 폐사진  정확도 :    모델 :
			5. 이파리  정확도 :    모델 :
			6. 최종 포트폴리오: 정확도 :     모델 :









■ 개/고양이 사진에서 컴퓨터가 분류하기 어려워하는 사진들을 골라내는 작업

	" 분류가 잘 안되는 사진을 따로 골라내서 그 사진들은 사람이 분류하게 하고 분류가 잘되는 수많은 
	  사진들은 컴퓨터가 분류하겠금 코드를 구현 "


	1. 소프트 맥스 함수를 통과한 결과

	개사진 --> 신경망 --> [0.2, 0.8]
				↓  ↓
				개  고양이

	사람도 분류하기 어려운 사진 --> 신경망 --> 



문제 89. 아래의 소프트 맥스 함수를 통과한 결과 데이터를 가지고 아래의 결과를 출력하시오 !

	import  numpy as np

	x = [[0.1,0.05,0.1,0.0,0.05,0.7,0.0,0.1,0.0,0.0],
	     [0.1,0.05,0.2,0.0,0.05,0.1,0.0,0.6,0.0,0.0],
	     [0.0,0.05,0.3,0.0,0.05,0.1,0.0,0.6,0.0,0.0],
	     [0.0,0.05,0.4,0.0,0.05,0.0,0.0,0.5,0.0,0.0],
	     [0.0,0.05,0.5,0.0,0.05,0.0,0.0,0.4,0.0,0.0],
	     [0.0,0.05,0.6,0.0,0.05,0.0,0.0,0.3,0.0,0.0],
	     [0.0,0.05,0.7,0.0,0.05,0.0,0.0,0.2,0.0,0.0],
	     [0.0,0.1,0.8,0.0,0.1,0.0,0.0,0.2,0.0,0.0],
	     [0.0,0.05,0.9,0.0,0.05,0.0,0.0,0.0,0.0,0.0]]

	결과 :
	
	
	[ 0.1   0.05  0.1   0.    0.05  0.7   0.    0.1   0.    0.  ] 0.7
	[ 0.1   0.05  0.2   0.    0.05  0.1   0.    0.6   0.    0.  ] 0.6
	[ 0.    0.05  0.3   0.    0.05  0.1   0.    0.6   0.    0.  ] 0.6
	[ 0.    0.05  0.4   0.    0.05  0.    0.    0.5   0.    0.  ] 0.5
	[ 0.    0.05  0.5   0.    0.05  0.    0.    0.4   0.    0.  ] 0.5
	[ 0.    0.05  0.6   0.    0.05  0.    0.    0.3   0.    0.  ] 0.6
	[ 0.    0.05  0.7   0.    0.05  0.    0.    0.2   0.    0.  ] 0.7
	[ 0.   0.1  0.8  0.   0.1  0.   0.   0.2  0.   0. ] 0.8
	[ 0.    0.05  0.9   0.    0.05  0.    0.    0.    0.    0.  ] 0.9
	
	
	for i in range(len(x)):
	    print(x[i],np.max(x,axis=1)[i])






문제 90. 아래와 같이 순서번호와 최대값이 출력되게 하시오 !

	0 0.7
	1 0.6
	2 0.6
	3 0.5
	4 0.5
	5 0.6
	6 0.7
	7 0.8
	8 0.9
	
	for i in range(len(x)):
	    print(i,np.max(x,axis=1)[i])





문제 91. 0.5~0.6 사이의 확률을 갖는 이미지의 번호와 확률을
	 출력하시오 !

	1 0.6
	2 0.6
	3 0.5
	4 0.5
	5 0.6







문제 92. 어제 완성한 개/고양이 vgg 모델을 저장하시오 !

	 파이썬을 이용했을때는 최종 갱신된 가중치와 바이어스를 pickle 로 내렸는데 텐써플로우는 아래의 
	 코드를 이용해서 모델을 저장한다.

	saver = tf.train.Saver() 는 변수초기화 위에 두고
	모델 저장하는 
	saver.save(sess, 'D:\\b\\resize\\model\\model')
	는 훈련을 다 시키고 tf.Session() 이 있는 곳에 배치



	# 모델 저장

	saver = tf.train.Saver()

	# 변수 초기화

		https://goodtogreate.tistory.com/entry/Saving-and-Restoring 참고





문제 93. 개/고양이가 아닌 사진들을 훈련 데이터에서 빼내고 테스트 데이터에 포함 시키시오 !

	개사진 : 3297, 3299, 3302, 3300, 8362

	라벨도 훈련 라벨에서 0(개) 5개 빼고 테스트 라벨에 0(개) 5개를 추가하시오 !







문제 94. GPU PC 에서 20 에폭 정도 돌린 모델을 저장하고 그 모델을 CPU PC 로 옮겨서 테스트 데이터의 
	 정확도를 확인하시오 !

	D:\b\resize\model <-- 카톡으로 받은 알집 안의 4개의 파일을 둠
	
	1. model.data-00000-of-00001 ---> training variables 를 가지고 있다.
	 
	2. checkpoint ---> binary 파일로 weights, biases, gradients 등을
			   저장한다.
	
	3. model.index
	
	4. model.meta ---> Tensorflow graph 를 저장하게 된다.
			   즉 all variables, operations, collections 등을
			   저장한다.
	
	* 모델 불러오는 방법
	
	saver = tf.train.import_meta_graph('model.meta')
	
	# 변수 초기화
	#init = tf.global_variables_initializer()
	
	with tf.Session() as sess:
	    saver.restore(sess, 'd:\\catdog\\model\\model')






문제 95. 훈련시에 배치정규화로 인해서 만들어진 최적의 배타와 감마를 계속 잘 유지 시킬수 있도록 위의 
	 코드에 아래 코드를 추가하시오 ! 


	# SGD 경사 감소법
	# optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.05)
	
	update_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)
	with tf.control_dependencies(update_ops):
	    # Ensures that we execute the update_ops before performing the train_step
	    Train = tf.train.AdamOptimizer(learning_rate=0.001).minimize(loss)










■ 훈련할때 98 % 이상 정확도를 보였던 모델이 테스트할 때 멍청해진 이유?

	training = tf.placeholder(tf.bool, name='training' )
	
	batch_z4 = tf.contrib.layers.batch_norm(y4, scale=True, is_training=training) # 배치정규화
	
	맨 아래 코드 :
		 print( sess.run(y_hat, feed_dict={x:test_txs, keep_prob:1.0, training:False}) )





문제 98. (오늘의 마지막 문제) 테스트 데이터 100장을 테스트 할 때 소프트 맥스를 통과한 확률값이 0.4 ~ 0.6 사이인 이미지의 이미지 번호를 출력하고 사람이 봐도 개인지 고양이 인지 구분이 어려운지 확인하시오 !

